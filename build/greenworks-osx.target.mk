# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := greenworks-osx
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=greenworks-osx' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DUSE_FILE32API' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter \
	-Wno-deprecated-declarations

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++14 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-std=c++14 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/include/node \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/src \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/openssl/config \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/openssl/openssl/include \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/uv/include \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/zlib \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/v8/include \
	-I$(srcdir)/deps \
	-I$(srcdir)/src \
	-I/Users/zackstein/Downloads/steamworks_sdk/public \
	-I/Users/zackstein/Documents/GitHub/Backup/greenworks/deps/discord_game_sdk \
	-I$(srcdir)/node_modules/nan \
	-I$(srcdir)/deps/zlib

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=greenworks-osx' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DUSE_FILE32API' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter \
	-Wno-deprecated-declarations

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++14 \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-std=c++14 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/include/node \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/src \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/openssl/config \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/openssl/openssl/include \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/uv/include \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/zlib \
	-I/Users/zackstein/Library/Caches/node-gyp/16.14.2/deps/v8/include \
	-I$(srcdir)/deps \
	-I$(srcdir)/src \
	-I/Users/zackstein/Downloads/steamworks_sdk/public \
	-I/Users/zackstein/Documents/GitHub/Backup/greenworks/deps/discord_game_sdk \
	-I$(srcdir)/node_modules/nan \
	-I$(srcdir)/deps/zlib

OBJS := \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/types.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/core.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/achievement_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/activity_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/application_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/image_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/lobby_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/network_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/overlay_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/relationship_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/storage_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/store_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/user_manager.o \
	$(obj).target/$(TARGET)/deps/discord_game_sdk/cpp/voice_manager.o \
	$(obj).target/$(TARGET)/src/api/greenworks_api_utils.o \
	$(obj).target/$(TARGET)/src/api/steam_api_achievement.o \
	$(obj).target/$(TARGET)/src/api/steam_api_auth.o \
	$(obj).target/$(TARGET)/src/api/steam_api_cloud.o \
	$(obj).target/$(TARGET)/src/api/steam_api_dlc.o \
	$(obj).target/$(TARGET)/src/api/steam_api_friends.o \
	$(obj).target/$(TARGET)/src/api/steam_api_inventory.o \
	$(obj).target/$(TARGET)/src/api/steam_api_matchmaking.o \
	$(obj).target/$(TARGET)/src/api/steam_api_settings.o \
	$(obj).target/$(TARGET)/src/api/steam_api_stats.o \
	$(obj).target/$(TARGET)/src/api/steam_api_workshop.o \
	$(obj).target/$(TARGET)/src/api/discord_api.o \
	$(obj).target/$(TARGET)/src/greenworks_api.o \
	$(obj).target/$(TARGET)/src/greenworks_async_workers.o \
	$(obj).target/$(TARGET)/src/greenworks_unzip.o \
	$(obj).target/$(TARGET)/src/greenworks_utils.o \
	$(obj).target/$(TARGET)/src/greenworks_workshop_workers.o \
	$(obj).target/$(TARGET)/src/greenworks_zip.o \
	$(obj).target/$(TARGET)/src/steam_async_worker.o \
	$(obj).target/$(TARGET)/src/steam_client.o \
	$(obj).target/$(TARGET)/src/steam_event.o \
	$(obj).target/$(TARGET)/src/steam_id.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/minizip.a $(builddir)/chrome_zlib.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-stdlib=libc++ \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++ \
	-L/Users/zackstein/Downloads/steamworks_sdk/redistributable_bin/osx/ \
	-L/Users/zackstein/Downloads/steamworks_sdk/public/steam/lib/osx/ \
	-L/Users/zackstein/Documents/GitHub/Backup/greenworks/deps/discord_game_sdk/lib/x86_64/

LIBTOOLFLAGS_Debug := \
	-stdlib=libc++ \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-stdlib=libc++ \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.13 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++ \
	-L/Users/zackstein/Downloads/steamworks_sdk/redistributable_bin/osx/ \
	-L/Users/zackstein/Downloads/steamworks_sdk/public/steam/lib/osx/ \
	-L/Users/zackstein/Documents/GitHub/Backup/greenworks/deps/discord_game_sdk/lib/x86_64/

LIBTOOLFLAGS_Release := \
	-stdlib=libc++ \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first

LIBS := \
	-lsteam_api \
	-lsdkencryptedappticket \
	-Wl,-rpath,@loader_path/../../lib/discord_game_sdk.dylib

$(builddir)/greenworks-osx.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/greenworks-osx.node: LIBS := $(LIBS)
$(builddir)/greenworks-osx.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/greenworks-osx.node: TOOLSET := $(TOOLSET)
$(builddir)/greenworks-osx.node: $(OBJS) $(builddir)/minizip.a $(builddir)/chrome_zlib.a FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/greenworks-osx.node
# Add target alias
.PHONY: greenworks-osx
greenworks-osx: $(builddir)/greenworks-osx.node

# Short alias for building this executable.
.PHONY: greenworks-osx.node
greenworks-osx.node: $(builddir)/greenworks-osx.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/greenworks-osx.node

